# controller_manager provides the necessary infrastructure to manage multiple controllers
# efficiently and robustly using ROS 2 Control.
controller_manager:
  ros__parameters:
    update_rate: 100 # update_rate specifies how often (in Hz) the controllers should be updated.
    use_sim_time: true
    # The JointTrajectoryController allows you to send joint trajectory commands to a group
    # of joints on a robot. These commands specify the desired positions for each joint.
    deli_arm_controller:
      type: ros2_control_demo_example_7/RobotController

    # Controls the gripper
    deli_hand_controller:
      type: ros2_control_demo_example_7/RobotController

    # Responsible for publishing the current state of the robot's
    # joints to the /joint_states ROS 2 topic
    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

# Define the parameters for each controller
deli_arm_controller:
  ros__parameters:
    joints:
      - joint_1
      - joint_2
      - joint_3
      - joint_4
      - joint_5

    # The controller will expect position commands as input for each of these joints.
    command_interfaces:
      - position
      - velocity

    # Tells the controller that it should expect to receive position data as the state
    # feedback from the hardware interface.
    state_interfaces:
      - position
      - velocity

deli_hand_controller:
  ros__parameters:
    joint: jointhand_1
    # The controller will expect position commands as input for each of these joints.

    command_interfaces:
      - position
      - velocity

    # Tells the controller that it should expect to receive position data as the state
    # feedback from the hardware interface.
    state_interfaces:
      - position
      - velocity
